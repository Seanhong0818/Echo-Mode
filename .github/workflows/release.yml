name: Release (npm publish @echo/*)

on:
  push:
    tags:
      - 'v*.*.*'   # e.g. v1.3.0
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (no publish)'
        required: false
        default: 'false'
        type: choice
        options: ['false', 'true']

permissions:
  contents: write          # create GitHub release notes (optional)
  id-token: write          # OIDC for npm provenance
  packages: write

env:
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_CONFIG_PROVENANCE: true

jobs:
  publish:
    name: publish (node20)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js (20.x) with pnpm cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Enable corepack (pnpm)
        run: |
          corepack enable
          corepack prepare pnpm@9 --activate

      - name: Install (frozen)
        run: pnpm install --frozen-lockfile

      - name: Build all packages
        run: pnpm -r --filter "./open/packages/*" run build

      - name: Configure npm auth (for scoped publish)
        run: |
          npm config set //registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}
          npm whoami

      - name: Publish @echo/* (respect "private": false)
        run: |
          if [ "${{ github.event.inputs.dry_run || 'false' }}" = "true" ]; then
            echo "ðŸ”Ž Dry-run mode"
            pnpm -r --filter "./open/packages/*" publish --access public --no-git-checks --dry-run
          else
            pnpm -r --filter "./open/packages/*" publish --access public --no-git-checks
          fi

      - name: Release notes (optional)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true