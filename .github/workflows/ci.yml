name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      has_node: ${{ steps.find.outputs.found }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: find
        name: Detect package.json
        shell: bash
        run: |
          if ls -1 **/package.json 2>/dev/null | grep -q .; then
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

  build-and-test:
    needs: detect
    if: ${{ needs.detect.outputs.has_node == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

- name: Setup Node
  uses: actions/setup-node@v4
  with:
    node-version: 20

- name: Install pnpm
  run: npm install -g pnpm

- name: Enable corepack + install
        run: |
          corepack enable
          pnpm -v
          pnpm install --frozen-lockfile=false

- name: Build (monorepo-friendly)
        run: pnpm -r build --if-present

- name: Test
        run: pnpm -r test --if-present

  docs-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Markdownlint (via npx)
        run: |
          npx --yes markdownlint-cli2 "**/*.md" "!archive/**"
